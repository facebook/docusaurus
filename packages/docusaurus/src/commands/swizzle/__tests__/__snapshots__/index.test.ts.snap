// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`swizzle eject ComponentInFolder JS: ComponentInFolder/ComponentInSubFolder/index.css 1`] = `
".testClass {
  background: black;
}
"
`;

exports[`swizzle eject ComponentInFolder JS: ComponentInFolder/ComponentInSubFolder/styles.css 1`] = `
".testClass {
  background: black;
}
"
`;

exports[`swizzle eject ComponentInFolder JS: ComponentInFolder/ComponentInSubFolder/styles.module.css 1`] = `
".testClass {
  background: black;
}
"
`;

exports[`swizzle eject ComponentInFolder JS: ComponentInFolder/Sibling.css 1`] = `
".testClass {
  background: black;
}
"
`;

exports[`swizzle eject ComponentInFolder JS: ComponentInFolder/index.css 1`] = `
".testClass {
  background: black;
}
"
`;

exports[`swizzle eject ComponentInFolder JS: theme dir tree 1`] = `
"theme
└── ComponentInFolder
    ├── ComponentInSubFolder
    │   ├── index.css
    │   ├── styles.css
    │   └── styles.module.css
    ├── Sibling.css
    └── index.css"
`;

exports[`swizzle eject ComponentInFolder TS: ComponentInFolder/ComponentInSubFolder/index.css 1`] = `
".testClass {
  background: black;
}
"
`;

exports[`swizzle eject ComponentInFolder TS: ComponentInFolder/ComponentInSubFolder/index.tsx 1`] = `
"import React from 'react';

export default function ComponentInSubFolder() {
  return <div>ComponentInSubFolder</div>;
}
"
`;

exports[`swizzle eject ComponentInFolder TS: ComponentInFolder/ComponentInSubFolder/styles.css 1`] = `
".testClass {
  background: black;
}
"
`;

exports[`swizzle eject ComponentInFolder TS: ComponentInFolder/ComponentInSubFolder/styles.module.css 1`] = `
".testClass {
  background: black;
}
"
`;

exports[`swizzle eject ComponentInFolder TS: ComponentInFolder/Sibling.css 1`] = `
".testClass {
  background: black;
}
"
`;

exports[`swizzle eject ComponentInFolder TS: ComponentInFolder/Sibling.tsx 1`] = `
"import React from 'react';

export default function Sibling() {
  return <div>Sibling</div>;
}
"
`;

exports[`swizzle eject ComponentInFolder TS: ComponentInFolder/index.css 1`] = `
".testClass {
  background: black;
}
"
`;

exports[`swizzle eject ComponentInFolder TS: ComponentInFolder/index.tsx 1`] = `
"import React from 'react';

export default function ComponentInFolder() {
  return <div>ComponentInFolder</div>;
}
"
`;

exports[`swizzle eject ComponentInFolder TS: theme dir tree 1`] = `
"theme
└── ComponentInFolder
    ├── ComponentInSubFolder
    │   ├── index.css
    │   ├── index.tsx
    │   ├── styles.css
    │   └── styles.module.css
    ├── Sibling.css
    ├── Sibling.tsx
    ├── index.css
    └── index.tsx"
`;

exports[`swizzle eject ComponentInFolder/ComponentInSubFolder JS: ComponentInFolder/ComponentInSubFolder/index.css 1`] = `
".testClass {
  background: black;
}
"
`;

exports[`swizzle eject ComponentInFolder/ComponentInSubFolder JS: ComponentInFolder/ComponentInSubFolder/styles.css 1`] = `
".testClass {
  background: black;
}
"
`;

exports[`swizzle eject ComponentInFolder/ComponentInSubFolder JS: ComponentInFolder/ComponentInSubFolder/styles.module.css 1`] = `
".testClass {
  background: black;
}
"
`;

exports[`swizzle eject ComponentInFolder/ComponentInSubFolder JS: theme dir tree 1`] = `
"theme
└── ComponentInFolder
    └── ComponentInSubFolder
        ├── index.css
        ├── styles.css
        └── styles.module.css"
`;

exports[`swizzle eject ComponentInFolder/ComponentInSubFolder TS: ComponentInFolder/ComponentInSubFolder/index.css 1`] = `
".testClass {
  background: black;
}
"
`;

exports[`swizzle eject ComponentInFolder/ComponentInSubFolder TS: ComponentInFolder/ComponentInSubFolder/index.tsx 1`] = `
"import React from 'react';

export default function ComponentInSubFolder() {
  return <div>ComponentInSubFolder</div>;
}
"
`;

exports[`swizzle eject ComponentInFolder/ComponentInSubFolder TS: ComponentInFolder/ComponentInSubFolder/styles.css 1`] = `
".testClass {
  background: black;
}
"
`;

exports[`swizzle eject ComponentInFolder/ComponentInSubFolder TS: ComponentInFolder/ComponentInSubFolder/styles.module.css 1`] = `
".testClass {
  background: black;
}
"
`;

exports[`swizzle eject ComponentInFolder/ComponentInSubFolder TS: theme dir tree 1`] = `
"theme
└── ComponentInFolder
    └── ComponentInSubFolder
        ├── index.css
        ├── index.tsx
        ├── styles.css
        └── styles.module.css"
`;

exports[`swizzle eject ComponentInFolder/Sibling JS: ComponentInFolder/Sibling.css 1`] = `
".testClass {
  background: black;
}
"
`;

exports[`swizzle eject ComponentInFolder/Sibling JS: theme dir tree 1`] = `
"theme
└── ComponentInFolder
    └── Sibling.css"
`;

exports[`swizzle eject ComponentInFolder/Sibling TS: ComponentInFolder/Sibling.css 1`] = `
".testClass {
  background: black;
}
"
`;

exports[`swizzle eject ComponentInFolder/Sibling TS: ComponentInFolder/Sibling.tsx 1`] = `
"import React from 'react';

export default function Sibling() {
  return <div>Sibling</div>;
}
"
`;

exports[`swizzle eject ComponentInFolder/Sibling TS: theme dir tree 1`] = `
"theme
└── ComponentInFolder
    ├── Sibling.css
    └── Sibling.tsx"
`;

exports[`swizzle eject FirstLevelComponent JS: FirstLevelComponent.css 1`] = `
".testClass {
  background: black;
}
"
`;

exports[`swizzle eject FirstLevelComponent JS: theme dir tree 1`] = `
"theme
└── FirstLevelComponent.css"
`;

exports[`swizzle eject FirstLevelComponent TS: FirstLevelComponent.css 1`] = `
".testClass {
  background: black;
}
"
`;

exports[`swizzle eject FirstLevelComponent TS: FirstLevelComponent.tsx 1`] = `
"import React from 'react';

export default function FirstLevelComponent() {
  return <div>First level component</div>;
}
"
`;

exports[`swizzle eject FirstLevelComponent TS: theme dir tree 1`] = `
"theme
├── FirstLevelComponent.css
└── FirstLevelComponent.tsx"
`;

exports[`swizzle wrap ComponentInFolder JS: ComponentInFolder/index.js 1`] = `
"import React from 'react';
import ComponentInFolder from '@theme-original/ComponentInFolder';

export default function ComponentInFolderWrapper(props) {
  return (
    <>
      <ComponentInFolder {...props} />
    </>
  );
}
"
`;

exports[`swizzle wrap ComponentInFolder JS: theme dir tree 1`] = `
"theme
└── ComponentInFolder
    └── index.js"
`;

exports[`swizzle wrap ComponentInFolder TS: ComponentInFolder/index.tsx 1`] = `
"import React from 'react';
import ComponentInFolder from '@theme-original/ComponentInFolder';
import type ComponentInFolderType from '@theme/ComponentInFolder';
import type {WrapperProps} from '@docusaurus/types';

type Props = WrapperProps<typeof ComponentInFolderType>;

export default function ComponentInFolderWrapper(props: Props): JSX.Element {
  return (
    <>
      <ComponentInFolder {...props} />
    </>
  );
}
"
`;

exports[`swizzle wrap ComponentInFolder TS: theme dir tree 1`] = `
"theme
└── ComponentInFolder
    └── index.tsx"
`;

exports[`swizzle wrap ComponentInFolder/ComponentInSubFolder JS: ComponentInFolder/ComponentInSubFolder/index.js 1`] = `
"import React from 'react';
import ComponentInSubFolder from '@theme-original/ComponentInFolder/ComponentInSubFolder';

export default function ComponentInSubFolderWrapper(props) {
  return (
    <>
      <ComponentInSubFolder {...props} />
    </>
  );
}
"
`;

exports[`swizzle wrap ComponentInFolder/ComponentInSubFolder JS: theme dir tree 1`] = `
"theme
└── ComponentInFolder
    └── ComponentInSubFolder
        └── index.js"
`;

exports[`swizzle wrap ComponentInFolder/ComponentInSubFolder TS: ComponentInFolder/ComponentInSubFolder/index.tsx 1`] = `
"import React from 'react';
import ComponentInSubFolder from '@theme-original/ComponentInFolder/ComponentInSubFolder';
import type ComponentInSubFolderType from '@theme/ComponentInFolder/ComponentInSubFolder';
import type {WrapperProps} from '@docusaurus/types';

type Props = WrapperProps<typeof ComponentInSubFolderType>;

export default function ComponentInSubFolderWrapper(props: Props): JSX.Element {
  return (
    <>
      <ComponentInSubFolder {...props} />
    </>
  );
}
"
`;

exports[`swizzle wrap ComponentInFolder/ComponentInSubFolder TS: theme dir tree 1`] = `
"theme
└── ComponentInFolder
    └── ComponentInSubFolder
        └── index.tsx"
`;

exports[`swizzle wrap ComponentInFolder/Sibling JS: ComponentInFolder/Sibling.js 1`] = `
"import React from 'react';
import Sibling from '@theme-original/ComponentInFolder/Sibling';

export default function SiblingWrapper(props) {
  return (
    <>
      <Sibling {...props} />
    </>
  );
}
"
`;

exports[`swizzle wrap ComponentInFolder/Sibling JS: theme dir tree 1`] = `
"theme
└── ComponentInFolder
    └── Sibling.js"
`;

exports[`swizzle wrap ComponentInFolder/Sibling TS: ComponentInFolder/Sibling.tsx 1`] = `
"import React from 'react';
import Sibling from '@theme-original/ComponentInFolder/Sibling';
import type SiblingType from '@theme/ComponentInFolder/Sibling';
import type {WrapperProps} from '@docusaurus/types';

type Props = WrapperProps<typeof SiblingType>;

export default function SiblingWrapper(props: Props): JSX.Element {
  return (
    <>
      <Sibling {...props} />
    </>
  );
}
"
`;

exports[`swizzle wrap ComponentInFolder/Sibling TS: theme dir tree 1`] = `
"theme
└── ComponentInFolder
    └── Sibling.tsx"
`;

exports[`swizzle wrap FirstLevelComponent JS: FirstLevelComponent.js 1`] = `
"import React from 'react';
import FirstLevelComponent from '@theme-original/FirstLevelComponent';

export default function FirstLevelComponentWrapper(props) {
  return (
    <>
      <FirstLevelComponent {...props} />
    </>
  );
}
"
`;

exports[`swizzle wrap FirstLevelComponent JS: theme dir tree 1`] = `
"theme
└── FirstLevelComponent.js"
`;

exports[`swizzle wrap FirstLevelComponent TS: FirstLevelComponent.tsx 1`] = `
"import React from 'react';
import FirstLevelComponent from '@theme-original/FirstLevelComponent';
import type FirstLevelComponentType from '@theme/FirstLevelComponent';
import type {WrapperProps} from '@docusaurus/types';

type Props = WrapperProps<typeof FirstLevelComponentType>;

export default function FirstLevelComponentWrapper(props: Props): JSX.Element {
  return (
    <>
      <FirstLevelComponent {...props} />
    </>
  );
}
"
`;

exports[`swizzle wrap FirstLevelComponent TS: theme dir tree 1`] = `
"theme
└── FirstLevelComponent.tsx"
`;
